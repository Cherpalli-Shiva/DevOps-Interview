Shell Script Automation: Basic Tasks
Here are beginner-friendly tasks to help students understand and practice shell script automation:----------------------Task 1: Create a Backup Script
Objective:Write a shell script to back up a directory.Requirements:
1.	Prompt the user to enter a source directory and a destination directory.
2.	Copy all files from the source directory to the destination directory.
3.	Add a timestamp to the backup folder's name (e.g., backup_YYYY-MM-DD).
Hint:
·	Use the cpcommand to copy files.
·	Use the datecommand to generate a timestamp.



----------------------Task 2: File Organizer
Objective:Automate file organization in a directory.Requirements:
1.	Create subdirectories for file types (images, documents, scripts, etc.).
2.	Move files into their respective directories based on their extensions:
Hint:
·	Use the mkdirand mvcommands.
·	Use casestatements or ifconditions to check file extensions.


----------------------Task 3: Disk Usage Monitor
Objective:Create a script to monitor disk usage.Requirements:
1.	Check the available disk space using the dfcommand.
2.	If the disk space usage exceeds 80%, print a warning message.
3.	Log the output to a file (e.g., disk_usage.log).
Hint:
·	Use df -hto display disk usage in a human-readable format.
·	Parse the output using awkor grep.


----------------------Task 4: User Information Script
Objective:Write a script to display system and user information.Requirements:
1.	Print the current user's name.
2.	Show the hostname of the machine.
3.	Display the current date and time.
Hint:
·	Use commands like whoami, hostname, and date.



----------------------Task 5: Word Count Script
Objective:Count words in a file.Requirements:
1.	Ask the user to provide a file path.
2.	Count the total number of words in the file using the wccommand.
3.	Print the word count to the terminal.
Hint:
·	Use wc -wto count words in a file.
·	Include error handling if the file does not exist.



----------------------Task 6: Simple Calculator
Objective:Create a calculator script.Requirements:
1.	Prompt the user for two numbers and an operation (+, -, *, /).
2.	Perform the operation and display the result.
Hint:
·	Use readto accept user input.
·	Use expror $(( ))for arithmetic operations.


----------------------Task 7: Welcome Message Automation
Objective:Display a personalized welcome message.Requirements:
1.	Prompt the user for their name.
2.	Display a message like: "Hello, [Name]! Welcome to Shell Scripting."
Hint:
·	Use echoand readto interact with the user.


